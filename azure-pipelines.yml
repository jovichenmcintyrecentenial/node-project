# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  - group: Node

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:

  - task: NodeTool@0
    inputs:
      versionSource: 'spec'
      versionSpec: '16.17.1'
      checkLatest: true

  - task: InstallSSHKey@0
    inputs:
      knownHostsEntry: 'ssh.dev.azure.com'
      sshPublicKey: $(ssh)
      sshKeySecureFile: 'i_rsa'

  # - task: CmdLine@2
  #   displayName: Connect to herouke using token
  #   inputs:
  #     script: |
  #       HEROKU_API_KEY='075d24bc-0185-4299-a893-c7e8b8e075f7' heroku run ls --app ancient-hollows-68245

  # - task: CmdLine@2
  #   displayName: LS
  #   inputs:
  #     script: 'ls'

  - task: CmdLine@2
    displayName: Download dependencies
    inputs:
      script: 'npm install'

  - task: CmdLine@2
    displayName: Pull project and add heroku remote url
    inputs:
      script: |
        ls
        mkdir node
        cd node
        git init
        git remote add origin git@ssh.dev.azure.com:v3/centennialprojects/Node%20API/Node%20API
        git pull origin master
        git status
        git branch
        git checkout master
        git log
        git remote add heroku https://jovi848:7db74263-8fb2-490e-be4b-146d1a55ae8e@git.heroku.com/ancient-hollows-68245.git


  - task: CmdLine@2
    displayName: Run test
    inputs:
      script: |
        ls
        npm test 
  
  - task: CmdLine@2
    displayName: Run Code Coverage
    inputs:
      script: |
        ls
        npm run test-coverage



  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Build.SourcesDirectory)/node/coverage/cobertura-coverage.xml'
      failIfCoverageEmpty: true

  - task: CmdLine@2
    displayName: Deploy to heroku
    inputs:
      script: |
        ls
        cd node
        git push heroku master


